; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:pro8MHzatmega328]
platform = atmelavr
board = pro8MHzatmega328
framework = arduino
upload_port = /dev/ttyBOSL0
upload_speed = 19200
monitor_port = /dev/ttyBOSL0
monitor_speed = 115200
extra_scripts = pre:flash_args.py

bosl_boardname = P5
bosl_sleeptime = 300

lib_deps = 
	rocketscream/Low-Power@^1.81
	milesburton/DallasTemperature@^3.11.0
	bblanchon/ArduinoJson@^6.19.4
	; adafruit/SD@0.0.0-alpha+sha.041f788250
	; SPI


[env:boslISPrecovery]
; This environment is used when programming via another Arduino,
; primarily as a last-resort when a BOSL board is stuck in boot-loop due to firmware bugs.
; The host arduino must be flashed with the appropriate 'ArduinoISP' sketch.
; The target BOSL board must be connected via pins GND,RST,11,12,13 like an arduino Uno would be.
extends = env:pro8MHzatmega328
; stk500v1 is the protocol implemented by the ArduinoISP device
upload_protocol = stk500v1
upload_port = /dev/ttyACM0
;upload_speed = 19200
upload_speed = 115200

; 115200 is too fast for serial upload
; board_bootloader.file = optiboot_flash_atmega328p_UART0_115200_8000000L_B5.hex
; 19200 is a safe upload rate
board_bootloader.file = optiboot_flash_atmega328p_UART0_19200_8000000L_B5.hex
board_bootloader.lfuse = 0xFF
board_bootloader.hfuse = 0xDA
board_bootloader.efuse = 0xFD
board_bootloader.lock_bits = 0x0F
board_bootloader.unlock_bits = 0x3F

; These flags are added for 'burn bootloader' command.
; For regular uploads, PIO automatically passes the appropriate port/speed settings
upload_flags =
    -P$UPLOAD_PORT
    -b$UPLOAD_SPEED
    -e

; Parts below used for 'custom' upload protocol
;upload_protocol = custom
; upload_flags =
;     -C
;     ; use "tool-avrdude-megaavr" for the atmelmegaavr platform
;     ${platformio.packages_dir}/tool-avrdude/avrdude.conf
;     -p
;     $BOARD_MCU
;     -P
;     $UPLOAD_PORT
;     -b
;     $UPLOAD_SPEED
;     -c
;     stk500v1
;upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i